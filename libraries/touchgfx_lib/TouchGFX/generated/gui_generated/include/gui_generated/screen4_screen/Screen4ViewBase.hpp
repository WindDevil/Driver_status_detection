/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN4VIEWBASE_HPP
#define SCREEN4VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen4_screen/Screen4Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <touchgfx/containers/progress_indicators/CircleProgress.hpp>
#include <touchgfx/widgets/canvas/PainterRGB888.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/graph/GraphWrapAndClear.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/graph/GraphLabels.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/Button.hpp>

class Screen4ViewBase : public touchgfx::View<Screen4Presenter>
{
public:
    Screen4ViewBase();
    virtual ~Screen4ViewBase() {}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::TiledImage tiledImage1;
    touchgfx::CircleProgress circleProgress1;
    touchgfx::PainterRGB888 circleProgress1Painter;
    touchgfx::CircleProgress circleProgress1_1;
    touchgfx::PainterRGB888 circleProgress1_1Painter;
    touchgfx::CircleProgress circleProgress1_2;
    touchgfx::PainterRGB888 circleProgress1_2Painter;
    touchgfx::CircleProgress circleProgress1_3;
    touchgfx::PainterRGB888 circleProgress1_3Painter;
    touchgfx::CircleProgress circleProgress1_4;
    touchgfx::PainterRGB888 circleProgress1_4Painter;
    touchgfx::CircleProgress circleProgress1_5;
    touchgfx::PainterRGB888 circleProgress1_5Painter;
    touchgfx::TextAreaWithOneWildcard textArea1;
    touchgfx::GraphWrapAndClear<3> dynamicGraph1;
    touchgfx::GraphElementHistogram dynamicGraph1Histogram1;
    touchgfx::GraphElementGridY dynamicGraph1MajorYAxisGrid;
    touchgfx::GraphLabelsY dynamicGraph1MajorYAxisLabel;
    touchgfx::TextArea textArea2;
    touchgfx::TextArea textArea3;
    touchgfx::TextArea textArea4;
    touchgfx::TextArea textArea5;
    touchgfx::TextArea textArea6;
    touchgfx::TextArea textArea7;
    touchgfx::TextArea textArea8;
    touchgfx::TextArea textArea9;
    touchgfx::TextArea textArea10;
    touchgfx::TextAreaWithOneWildcard textArea11;
    touchgfx::Button button1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA1_SIZE = 20;
    touchgfx::Unicode::UnicodeChar textArea1Buffer[TEXTAREA1_SIZE];
    static const uint16_t TEXTAREA11_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea11Buffer[TEXTAREA11_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen4ViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 15360;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // SCREEN4VIEWBASE_HPP
